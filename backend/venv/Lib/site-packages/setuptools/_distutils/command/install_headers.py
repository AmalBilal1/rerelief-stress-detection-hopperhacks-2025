"""distutils.command.install_headers

Implements the Distutils 'install_headers' command, to install C/C++ header
files to the Python include directory."""

<<<<<<< HEAD
from typing import ClassVar

from ..core import Command
=======
from distutils.core import Command
>>>>>>> 030eb08ce4fc1c2fddcb364aae4f4b677c17bd8b


# XXX force is never used
class install_headers(Command):
<<<<<<< HEAD
    description = "install C/C++ header files"

    user_options: ClassVar[list[tuple[str, str, str]]] = [
        ('install-dir=', 'd', "directory to install header files to"),
        ('force', 'f', "force installation (overwrite existing files)"),
    ]
=======

    description = "install C/C++ header files"

    user_options = [('install-dir=', 'd',
                     "directory to install header files to"),
                    ('force', 'f',
                     "force installation (overwrite existing files)"),
                   ]
>>>>>>> 030eb08ce4fc1c2fddcb364aae4f4b677c17bd8b

    boolean_options = ['force']

    def initialize_options(self):
        self.install_dir = None
<<<<<<< HEAD
        self.force = False
        self.outfiles = []

    def finalize_options(self):
        self.set_undefined_options(
            'install', ('install_headers', 'install_dir'), ('force', 'force')
        )
=======
        self.force = 0
        self.outfiles = []

    def finalize_options(self):
        self.set_undefined_options('install',
                                   ('install_headers', 'install_dir'),
                                   ('force', 'force'))

>>>>>>> 030eb08ce4fc1c2fddcb364aae4f4b677c17bd8b

    def run(self):
        headers = self.distribution.headers
        if not headers:
            return

        self.mkpath(self.install_dir)
        for header in headers:
            (out, _) = self.copy_file(header, self.install_dir)
            self.outfiles.append(out)

    def get_inputs(self):
        return self.distribution.headers or []

    def get_outputs(self):
        return self.outfiles
